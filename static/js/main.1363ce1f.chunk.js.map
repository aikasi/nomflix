{"version":3,"sources":["assets/noPosterSmall.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Container","styled","div","Title","span","Grid","Section","title","children","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","noPoster","length","substr","HomePresenter","nowPlaying","upComing","popular","loading","error","Helmet","Loader","map","movie","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","tvApi","HomeContainer","state","data","results","this","setState","React","Component","Form","form","Input","input","SearchPresenter","movieResults","handleSubmit","tvResults","searchTerm","updateTerm","onSubmit","placeholder","value","onChange","show","original_name","first_air_date","SearchContainer","event","preventDefault","searchByTerm","target","a","TVPresenter","topRated","airingToday","TVContainer","Backdrop","bgImage","NoBackdropImage","NoBackdropImageText","Content","Cover","Data","h3","ItemContainer","Item","Divider","Overview","p","DetailPresenter","result","backdrop_path","require","default","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","pathname","location","includes","match","push","history","parsedId","parseInt","isNaN","Header","header","List","ul","li","current","SLink","Link","withRouter","path","exact","component","Home","TV","render","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1363ce1f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.d2829a69.png\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]).isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 20px;\r\n  font-size: 32px;\r\n`;\r\n\r\nexport default () => (\r\n  <Container>\r\n    <span role=\"img\" aria-label=\"Loading\"></span>Loading...\r\n  </Container>\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${(props) => props.color};\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport noPoster from \"assets/noPosterSmall.png\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${(props) => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  bottom: 5px;\r\n  right: 5px;\r\n  position: absolute;\r\n  opacity: 0;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl ? `https://image.tmdb.org/t/p/w300${imageUrl}` : noPoster\r\n          }\r\n        />\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            ⭐\r\n          </span>{\" \"}\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>{title.length > 18 ? `${title.substr(0, 18)}...` : title}</Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool,\r\n};\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, upComing, popular, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>Movies | Nomflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {nowPlaying && nowPlaying.length > 0 && (\r\n          <Section title=\"Now Playing\">\r\n            {nowPlaying.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                isMovie={true}\r\n                year={movie.release_date && movie.release_date.substr(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {upComing && upComing.length > 0 && (\r\n          <Section title=\"UpComing Movies\">\r\n            {upComing.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                isMovie={true}\r\n                year={movie.release_date && movie.release_date.substr(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Movies\">\r\n            {popular.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                isMovie={true}\r\n                year={movie.release_date && movie.release_date.substr(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  upComing: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default HomePresenter;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"d2733e3fe7c66b3ce27b0aee2cdba4d1\",\r\n    language: \"en-US\",\r\n  },\r\n});\r\n\r\nexport const moviesApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upComing: () => api.get(\"movie/upcoming\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  movieDetail: (id) =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        query: term,\r\n      },\r\n    }),\r\n};\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  showDetail: (id) =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/tv\", {\r\n      params: {\r\n        query: term,\r\n      },\r\n    }),\r\n};\r\n","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { moviesApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upComing: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying },\r\n      } = await moviesApi.nowPlaying();\r\n      const {\r\n        data: { results: upComing },\r\n      } = await moviesApi.upComing();\r\n      const {\r\n        data: { results: popular },\r\n      } = await moviesApi.popular();\r\n      this.setState({\r\n        nowPlaying,\r\n        upComing,\r\n        popular,\r\n      });\r\n    } catch {\r\n      this.setState({ error: \"Can't find movie information\" });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, upComing, popular, error, loading } = this.state;\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upComing={upComing}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  handleSubmit,\r\n  tvResults,\r\n  searchTerm,\r\n  updateTerm,\r\n  loading,\r\n  error,\r\n}) => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>Search | Nomflix</title>\r\n    </Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input\r\n        placeholder=\"Search Movies or TV Shows...\"\r\n        value={searchTerm}\r\n        onChange={updateTerm}\r\n      ></Input>\r\n    </Form>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <>\r\n        {movieResults && movieResults.length > 0 && (\r\n          <Section title=\"Movie Results\">\r\n            {movieResults.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                isMovie={true}\r\n                year={movie.release_date && movie.release_date.substr(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {tvResults && tvResults.length > 0 && (\r\n          <Section title=\"TV Show Results\">\r\n            {tvResults.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date && show.first_air_date.substr(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n        {tvResults &&\r\n          movieResults &&\r\n          tvResults.length === 0 &&\r\n          movieResults.length === 0 && (\r\n            <Message text=\"Nothing found \" color=\"#95a5a6\" />\r\n          )}\r\n      </>\r\n    )}\r\n  </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  error: PropTypes.string,\r\n  searchTerm: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { moviesApi, tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    tvResults: null,\r\n    searchTerm: \"\",\r\n    loading: false,\r\n    error: null,\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm();\r\n    }\r\n  };\r\n\r\n  updateTerm = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    this.setState({\r\n      searchTerm: value,\r\n    });\r\n  };\r\n\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ loading: true });\r\n    try {\r\n      const {\r\n        data: { results: movieResults },\r\n      } = await moviesApi.search(searchTerm);\r\n      const {\r\n        data: { results: tvResults },\r\n      } = await tvApi.search(searchTerm);\r\n      this.setState({\r\n        movieResults,\r\n        tvResults,\r\n      });\r\n    } catch {\r\n      this.setState({ error: \"Can't find results.\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\r\n    return (\r\n      <SearchPresenter\r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        searchTerm={searchTerm}\r\n        loading={loading}\r\n        error={error}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ popular, topRated, airingToday, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>TV Shows | Nomflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {topRated && topRated.length > 0 && (\r\n          <Section title=\"Top Rated Show\">\r\n            {topRated.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date && show.first_air_date.substr(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Show\">\r\n            {popular.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date && show.first_air_date.substr(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {airingToday && airingToday.length > 0 && (\r\n          <Section title=\"AiringToday\">\r\n            {airingToday.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date && show.first_air_date.substr(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n  popular: PropTypes.array,\r\n  topRated: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    loading: true,\r\n    error: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated },\r\n      } = await tvApi.topRated();\r\n      const {\r\n        data: { results: popular },\r\n      } = await tvApi.popular();\r\n      const {\r\n        data: { results: airingToday },\r\n      } = await tvApi.airingToday();\r\n      this.setState({\r\n        topRated,\r\n        popular,\r\n        airingToday,\r\n      });\r\n    } catch {\r\n      this.setState({ error: \"Can't find TV information\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { popular, topRated, airingToday, loading, error } = this.state;\r\n    return (\r\n      <TVPresenter\r\n        popular={popular}\r\n        topRated={topRated}\r\n        airingToday={airingToday}\r\n        loading={loading}\r\n        error={error}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"Components/Loader\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport Message from \"Components/Message\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst NoBackdropImage = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  filter: blur(1.5px);\r\n  opacity: 0.6;\r\n  z-index: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst NoBackdropImageText = styled.span`\r\n  font-size: 32px;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n  height: 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 32px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0px;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0px 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 12px;\r\n  opacity: 0.7;\r\n  line-height: 1.5;\r\n  width: 50%;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, loading, error }) =>\r\n  loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>Loading | Nomflix</title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : error ? (\r\n    <Message />\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\r\n          | Nomflix\r\n        </title>\r\n      </Helmet>\r\n      {result.backdrop_path ? (\r\n        <Backdrop\r\n          bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n        />\r\n      ) : (\r\n        <NoBackdropImage>\r\n          <NoBackdropImageText>No Image</NoBackdropImageText>\r\n        </NoBackdropImage>\r\n      )}\r\n\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"assets/noPosterSmall.png\").default\r\n          }\r\n        />\r\n        <Data>\r\n          <Title>\r\n            {result.original_title\r\n              ? result.original_title\r\n              : result.original_name}\r\n          </Title>\r\n          <ItemContainer>\r\n            <Item>\r\n              {result.release_date\r\n                ? result.release_date.substr(0, 4)\r\n                : result.first_air_date.substr(0, 4)}\r\n            </Item>\r\n            <Divider>:</Divider>\r\n            <Item>{result.runtime || result.episode_run_time} min</Item>\r\n            <Divider>:</Divider>\r\n            <Item>\r\n              {result.genres &&\r\n                result.genres.map((genre, index) =>\r\n                  index === result.genres.length - 1\r\n                    ? genre.name\r\n                    : `${genre.name} / `\r\n                )}\r\n            </Item>\r\n          </ItemContainer>\r\n          <Overview>{result.overview}</Overview>\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { moviesApi, tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\n\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname },\r\n    } = props;\r\n    this.state = {\r\n      result: null,\r\n      error: null,\r\n      loading: true,\r\n      isMovie: pathname.includes(\"/movie/\"),\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id },\r\n      },\r\n      history: { push },\r\n    } = this.props;\r\n    const { isMovie } = this.state;\r\n    const parsedId = parseInt(id);\r\n    if (isNaN(parsedId)) {\r\n      return push(\"/\");\r\n    }\r\n    let result = null;\r\n    try {\r\n      if (isMovie) {\r\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\r\n      } else {\r\n        ({ data: result } = await tvApi.showDetail(parsedId));\r\n      }\r\n    } catch {\r\n      this.setState({ error: \"Can't find anything.\" });\r\n    } finally {\r\n      this.setState({ loading: false, result });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, error, loading } = this.state;\r\n    return <DetailPresenter result={result} error={error} loading={loading} />;\r\n  }\r\n}\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 3px solid\r\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\r\n  transition: border-bottom 0.5s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <SLink to=\"/\">Movies</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\"}>\r\n        <SLink to=\"/tv\">TV</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <SLink to=\"/search\">Search</SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n));\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport Home from \"Routes/Home\";\r\nimport Search from \"Routes/Search\";\r\nimport TV from \"Routes/TV\";\r\nimport Detail from \"Routes/Detail\";\r\nimport Header from \"Components/Header\";\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default () => (\r\n  <Router>\r\n    <>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/tv\" exact component={TV} />\r\n        <Route path=\"/tv/popular\" render={() => <h1>Popular</h1>} />\r\n        <Route path=\"/search\" component={Search} />\r\n        <Route path=\"/movie/:id\" component={Detail} />\r\n        <Route path=\"/show/:id\" component={Detail} />\r\n        <Redirect from=\"*\" to=\"/\" />\r\n      </Switch>\r\n    </>\r\n  </Router>\r\n);\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-family:--apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size: 14px;\r\n        background-color:rgba(20,20,20,1);\r\n        color:white;\r\n        padding-top:50px;\r\n    }\r\n`;\r\n\r\nexport default globalStyles;\r\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}